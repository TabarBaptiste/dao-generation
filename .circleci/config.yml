# Configuration CircleCI pour PHP DAO Generator VS Code Extension
version: 2.1

# ============================================================================
# Orbs - Packages r√©utilisables pour simplifier la configuration
# ============================================================================
orbs:
  node: circleci/node@5.1.0

# ============================================================================
# Executors - Environnements d'ex√©cution r√©utilisables
# ============================================================================
executors:
  node-executor:
    docker:
      - image: cimg/node:22.17.1
    working_directory: ~/project

# ============================================================================
# Commands - Commandes r√©utilisables
# ============================================================================
commands:
  restore_dependencies:
    description: "Restore npm dependencies with cache"
    steps:
      - restore_cache:
          keys:
            - npm-deps-v1-{{ checksum "package-lock.json" }}
            - npm-deps-v1-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: npm-deps-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - node_modules

  setup_vsce:
    description: "Install and setup VS Code Extension CLI"
    steps:
      - run:
          name: Install VSCE globally
          command: npm install @vscode/vsce@latest

# ============================================================================
# Jobs - T√¢ches individuelles
# ============================================================================
jobs:
  # V√©rifications de qualit√© du code
  code-quality:
    executor: node-executor
    steps:
      - checkout
      - restore_dependencies
      - run:
          name: TypeScript compilation check
          command: npm run compile
      - run:
          name: Lint check
          command: |
            if npm run | grep -q ' lint'; then
              npm run lint
            else
              echo "No lint script found - skipping"
            fi
      - persist_to_workspace:
          root: ~/project
          paths:
            - out
            - node_modules

  # Build de l'extension
  build:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_dependencies
      - run:
          name: Build extension with esbuild
          command: npm run build:esbuild
      - run:
          name: List build artifacts
          command: |
            echo "=== Build output ==="
            ls -la dist/
            echo "=== Extension files size ==="
            du -h dist/*
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist
            - node_modules

  # Tests de l'extension
  # (Tests retir√©s) Aucune suite de tests d√©finie dans ce projet

  # Package de l'extension
  package:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_vsce
      - run:
          name: Package extension
          command: npm run vsce:package
      - run:
          name: List package contents
          command: npx @vscode/vsce ls --tree
      - run:
          name: Package info
          command: |
            echo "=== Package created ==="
            ls -la *.vsix
            echo "=== Package size ==="
            du -h *.vsix
      - store_artifacts:
          path: "*.vsix"
          destination: extension-packages
      - persist_to_workspace:
          root: ~/project
          paths:
            - "*.vsix"

  # Publication sur VS Code Marketplace (conditionnelle)
  publish:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_vsce
      - run:
          name: Publish to VS Code Marketplace
          command: |
            if [ -z "$VSCE_TOKEN" ]; then
              echo "‚ùå VSCE_TOKEN not set - skipping publish"
              exit 1
            fi

            echo "üöÄ Publishing to VS Code Marketplace..."
            npx @vscode/vsce publish --pat $VSCE_TOKEN
            echo "‚úÖ Extension published successfully!"

  # Release avec semantic-release
  release:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Semantic Release
          command: |
            if npm run | grep -q ' release'; then
              npm run release
            else
              echo "No release script found - skipping"
            fi
          environment:
            GITHUB_TOKEN: $GITHUB_TOKEN

# ============================================================================
# Workflows - Orchestration des jobs
# ============================================================================
workflows:
  version: 2

  # Workflow principal pour tous les commits
  build-and-test:
    jobs:
      - code-quality:
          filters:
            branches:
              ignore:
                - gh-pages

      - build:
          requires:
            - code-quality
          filters:
            branches:
              ignore:
                - gh-pages

      - package:
          requires:
            - build
          filters:
            branches:
              ignore:
                - gh-pages

  # Workflow de publication (main branch uniquement)
  publish-extension:
    jobs:
      - code-quality:
          filters:
            branches:
              only: main

      - build:
          requires:
            - code-quality
          filters:
            branches:
              only: main

      - package:
          requires:
            - build
          filters:
            branches:
              only: main

      # Publication manuelle - n√©cessite approbation
      - hold-for-approval:
          type: approval
          requires:
            - package
          filters:
            branches:
              only: main

      - publish:
          requires:
            - hold-for-approval
          filters:
            branches:
              only: main

      - release:
          requires:
            - publish
          filters:
            branches:
              only: main

  # Workflow nocturne pour v√©rifier la stabilit√©
  nightly-build:
    triggers:
      - schedule:
          cron: "0 2 * * *" # 2h du matin tous les jours
          filters:
            branches:
              only: main
    jobs:
      - code-quality
      - build:
          requires:
            - code-quality
      - package:
          requires:
            - build
